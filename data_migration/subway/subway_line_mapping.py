#!/usr/bin/env python3
# -*- coding: utf-8 -*-

def get_line_mapping_dict():
    """
    노선번호 코드별로 변경된 노선명을 매핑하는 딕셔너리
    """
    line_mapping = {
        'I1101': '수도권1호선',  # 기존 : 경인선
        'I1103': '수도권3호선', # 기존 : 수도권3호선
        'I1104': '수도권4호선', # 기존 : 수도권4호선
        'I11D1': '수도권신분당선', # 기존 : 수도권신분당선
        'I26K6': '동해선', # 기존 : 동해선
        'I27K7': '대경선', # 기존 : 대경선
        'I28A1': '인천국제공항선', # 기존 : 인천국제공항선
        'I28K1': '수인선', # 기존 : 수인선
        'I4101': '경부선', # 기존 : 경부선
        'I4102': '경원선', # 기존 : 경원선
        'I4103': '안산과천선', # 기존 : 안산과천선
        'I4104': '진접선', # 기존 : 진접선
        'I4105': '분당선', # 기존 : 분당선
        'I4106': '일산선', # 기존 : 일산선
        'I4108': '경의중앙선', # 기존 : 경의중앙선
        'I41K2': '경춘선', # 기존 : 경춘선
        'I41K5': '경강선', # 기존 : 경강선
        'I41WS': '서해선', # 기존 : 서해선
        'I4401': '장항선', # 기존 : 장항선
        'L11SL': '수도권 경량도시철도 신림선', # 기존 : 수도권 경량도시철도 신림선
        'L11UI': '우이신설선', # 기존 : 우이신설선
        'L2604': '부산 경량도시철도 4호선', # 기존 : 부산 경량도시철도 4호선
        'L41E1': '에버라인', # 기존 : 에버라인
        'L41G1': '김포도시철도', # 기존 : 김포도시철도
        'L41U1': '의정부', # 기존 : 의정부
        'L48B1': '부산김해경전철', # 기존 : 부산김해경전철
        'S1102': '2호선', # 기존 : 2호선
        'S1105': '5호선', # 기존 : 5호선
        'S1106': '6호선', # 기존 : 6호선
        'S1107': '도시철도 7호선', # 기존 : 도시철도 7호선
        'S1108': '8호선', # 기존 : 8호선
        'S1109': '수도권 도시철도 9호선', # 기존 : 수도권 도시철도 9호선
        'S1121': '2호선', # 기존 : 2호선
        'S1122': '2호선', # 기존 : 2호선
        'S2601': '부산 도시철도 1호선', # 기존 : 부산 도시철도 1호선
        'S2602': '부산 도시철도 2호선', # 기존 : 부산 도시철도 2호선
        'S2603': '부산 도시철도 3호선', # 기존 : 부산 도시철도 3호선
        'S2701': '대구 도시철도 1호선', # 기존 : 대구 도시철도 1호선
        'S2702': '대구 도시철도 2호선', # 기존 : 대구 도시철도 2호선
        'S2703': '대구 도시철도 3호선', # 기존 : 대구 도시철도 3호선
        'S2801': '인천지하철 1호선', # 기존 : 인천지하철 1호선
        'S2802': '인천지하철 2호선', # 기존 : 인천지하철 2호선
        'S28M1': '자기부상철도', # 기존 : 자기부상철도
        'S2901': '광주도시철도 1호선', # 기존 : 광주도시철도 1호선
        'S3001': '대전 도시철도 1호선', # 기존 : 대전 도시철도 1호선
        'S4108': '수도권 광역철도 8호선' # 기존 : 수도권 광역철도 8호선
    }
    return line_mapping

def get_line_short_mapping_dict():
    """
    노선번호 코드별로 노선 단축명을 매핑하는 딕셔너리
    """
    line_short_mapping = {
        'I1101': '1호선',  # 기존 : 경인선
        'I1103': '3호선', # 기존 : 수도권3호선
        'I1104': '4호선', # 기존 : 수도권4호선
        'I11D1': '수도권신분당선', # 기존 : 수도권신분당선
        'I26K6': '동해선', # 기존 : 동해선
        'I27K7': '대경선', # 기존 : 대경선
        'I28A1': '인천국제공항선', # 기존 : 인천국제공항선
        'I28K1': '수인선', # 기존 : 수인선
        'I4101': '경부선', # 기존 : 경부선
        'I4102': '경원선', # 기존 : 경원선
        'I4103': '안산과천선', # 기존 : 안산과천선
        'I4104': '진접선', # 기존 : 진접선
        'I4105': '분당선', # 기존 : 분당선
        'I4106': '일산선', # 기존 : 일산선
        'I4108': '경의중앙선', # 기존 : 경의중앙선
        'I41K2': '경춘선', # 기존 : 경춘선
        'I41K5': '경강선', # 기존 : 경강선
        'I41WS': '서해선', # 기존 : 서해선
        'I4401': '장항선', # 기존 : 장항선
        'L11SL': '수도권 경량도시철도 신림선', # 기존 : 수도권 경량도시철도 신림선
        'L11UI': '우이신설선', # 기존 : 우이신설선
        'L2604': '부산 경량도시철도 4호선', # 기존 : 부산 경량도시철도 4호선
        'L41E1': '에버라인', # 기존 : 에버라인
        'L41G1': '김포도시철도', # 기존 : 김포도시철도
        'L41U1': '의정부', # 기존 : 의정부
        'L48B1': '부산김해경전철', # 기존 : 부산김해경전철
        'S1102': '2호선', # 기존 : 2호선
        'S1105': '5호선', # 기존 : 5호선
        'S1106': '6호선', # 기존 : 6호선
        'S1107': '도시철도 7호선', # 기존 : 도시철도 7호선
        'S1108': '8호선', # 기존 : 8호선
        'S1109': '수도권 도시철도 9호선', # 기존 : 수도권 도시철도 9호선
        'S1121': '2호선', # 기존 : 2호선
        'S1122': '2호선', # 기존 : 2호선
        'S2601': '부산 도시철도 1호선', # 기존 : 부산 도시철도 1호선
        'S2602': '부산 도시철도 2호선', # 기존 : 부산 도시철도 2호선
        'S2603': '부산 도시철도 3호선', # 기존 : 부산 도시철도 3호선
        'S2701': '대구 도시철도 1호선', # 기존 : 대구 도시철도 1호선
        'S2702': '대구 도시철도 2호선', # 기존 : 대구 도시철도 2호선
        'S2703': '대구 도시철도 3호선', # 기존 : 대구 도시철도 3호선
        'S2801': '인천지하철 1호선', # 기존 : 인천지하철 1호선
        'S2802': '인천지하철 2호선', # 기존 : 인천지하철 2호선
        'S28M1': '자기부상철도', # 기존 : 자기부상철도
        'S2901': '광주도시철도 1호선', # 기존 : 광주도시철도 1호선
        'S3001': '대전 도시철도 1호선', # 기존 : 대전 도시철도 1호선
        'S4108': '수도권 광역철도 8호선' # 기존 : 수도권 광역철도 8호선
    }
    return line_short_mapping

def print_line_mapping_info():
    """
    노선 매핑 정보를 출력하는 함수
    """
    line_mapping = get_line_mapping_dict()
    line_short_mapping = get_line_short_mapping_dict()
    
    print("🚇 노선번호 코드별 매핑 정보")
    print("=" * 60)
    print(f"총 {len(line_mapping)}개의 노선 매핑")
    print()
    
    for line_code in sorted(line_mapping.keys()):
        line_name = line_mapping[line_code]
        line_short = line_short_mapping[line_code]
        print(f"{line_code:8s} → {line_name:20s} (단축명: {line_short})")

if __name__ == "__main__":
    print_line_mapping_info() 